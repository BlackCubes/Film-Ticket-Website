extends base

block append head
  script(src='https://js.stripe.com/v3/')
  //- script(src='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js')
  //- link(href='https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css' rel='stylesheet')
  //- script(src='/js/mapbox.js')

block content
  main.main
    section.section-show-header
      .heading-box
        .heading-box__background

          .heading-box__background-overlay &nbsp;
          img.heading-box__background-img(src=`${show.cloudinaryPhoto.cloudinaryUrl}`, alt=`${show.title}`)

          .bg-video
            video.bg-video__content(autoplay muted loop)
              source(src='/video/shows/shows-bg-video.mp4', type='video/mp4')
              source(src='/video/shows/shows-bg-video.webm', type='video/webm')
              | Sorry, your browser does not support embedded videos!

        .heading-box__poster
          img.heading-box__poster-img(src=`${show.cloudinaryPhoto.cloudinaryUrl}`, alt=`${show.title}`)

        .heading-box__data-container
          .heading-box__title
            h2.heading-secondary= show.title

          .heading-box__metadata-container
            ul.heading-box__metadata
              li.heading-box__metadata-item.paragraph= show.mpaaRating

              if show.genres
                li.heading-box__metadata-item.paragraph= show.genres

              li.heading-box__metadata-item.paragraph= show.contentType
              - const hours = Math.floor(show.durationHours)
              - const minutes = show.duration - hours*60

              li.heading-box__metadata-item.paragraph= `${hours}h ${minutes}m`

        .heading-box__info-container.u-center-text
          .heading-box__overview
            p.paragraph= show.overview

          .heading-box__buy
            a.btn.btn__promo(href="#showtimes") See showtimes

    section.section-show-showtimes(id="showtimes")
      .showtimes-box
        .showtimes-box__title.u-margin-top-small.u-margin-bottom-small
          h2.heading-secondary Showtimes
        .showtimes-box__theatertime-container.u-center-text
          - let checkFilter = []
          if user
            - checkFilter = show.tickets.map(ticket => (ticket.user.id === user.id) ? ticket.showtime.id : '')

          - let swiperContainerClass = 'none', swiperWrapperClass = 'none', swiperSlideClass = 'none'
          if show.showtimes.length > 1
            - swiperContainerClass = 'container'
            - swiperWrapperClass = 'wrapper'
            - swiperSlideClass = 'slide'

          .row--scroll.swiper--info(class=`swiper-${swiperContainerClass}`)
            if show.showtimes.length > 1
              .swiper-button-prev
              .swiper-button-next

            .row__inner--ticket(class=`swiper-${swiperWrapperClass}`)
              each showtime in show.showtimes
                .tile-ticket(class=`swiper-${swiperSlideClass}`)
                  .tile-ticket__media
                    a.tile-ticket__media-link.tile-ticket__media-link--logo(href=`/theater-overview/${showtime.theaters[0].slug}`)
                      img.tile-ticket__media-img(src=`${showtime.theaters[0].cloudinaryPhoto.cloudinaryUrl}`, alt=`${showtime.theaters[0].name}`)
                  
                  .tile-ticket__title.u-margin-bottom-small
                    h3.tile-ticket__title-content.heading-tertiary= `${showtime.theaters[0].name}`
                  
                  .tile-ticket__metadata-container
                    ul.tile-ticket__metadata
                      li.tile-ticket__metadata-item.paragraph= `${showtime.theaters[0].address}, ${showtime.theaters[0].city}, ${showtime.theaters[0].state} ${showtime.theaters[0].zipCode}`
                  
                  .tile-ticket__datetime
                    p.paragraph= `${showtime.startDateTime.toLocaleString('en-us', {month: 'long', day: 'numeric', year: 'numeric'})}`

                    p.paragraph= `${showtime.startDateTime.toLocaleString('en-us', {hour: '2-digit', minute: '2-digit', hour12: true})} - ${showtime.endDateTime.toLocaleString('en-us', {hour: '2-digit', minute: '2-digit', hour12: true})}`
                  
                  .tile-ticket__options
                    if user && checkFilter.filter(id => id === showtime.id).length > 0
                      button#ticketBought.btn.btn--grey-blue(disabled) Bought!
                    
                    else if user && user.role === 'event-owner'
                      button#ticketRestricted.btn.btn--red(disabled) Restricted!

                    else if user && Date.now() >= showtime.startDateTime
                      button#ticketExpired.btn.btn--red(disabled) Expired!
                    
                    else if user && showtime.soldOut
                      button#ticketSoldOut.btn.btn--red(disabled) Sold Out!

                    else if user && Date.now() < showtime.startDateTime && !showtime.soldOut
                      button#ticketShow.btn.btn--blue(name='hexadecimal-btn' data-show-id=`${show.id}` data-theater-id=`${showtime.theaters[0].id}` data-showtime-id=`${showtime.id}`) Buy!

                    else
                      a.btn.btn__promo.btn--light-silver(href='/login') Login

    section.section-show-synopsis
      .synopsis-box
        .synopsis-box__title.u-margin-top-small.u-margin-bottom-small
          h2.heading-secondary Synopsis
        .synopsis-box__synopsis
          p.paragraph= show.synopsis

    section.section-show-castcrew
      .castcrew-box
        .castcrew-box__title.u-margin-top-small.u-margin-bottom-small
          h2.heading-secondary Cast | Crew

        .castcrew-box__list-container
          .row--scroll.swiper--info.swiper-container
            .swiper-button-prev
            .swiper-button-next

            .row__inner.swiper-wrapper
              each castcrew in show.castcrew
                .tile.swiper-slide
                  .tile__media
                    img.tile__img(src=`${castcrew.cloudinaryPhoto.cloudinaryUrl}`, alt=`${castcrew.name}`)
                  .tile__details
                    .tile__title: a.tile__link(href=`/castcrew-overview/${castcrew.slug}`)= castcrew.name

    section.section-show-reviews
      .reviews-box
        .reviews-box__title.u-margin-top-small.u-margin-bottom-small
          h2.heading-secondary Reviews

        .reviews-box__list-container
          .row--scroll.swiper--review.swiper-container
            .swiper-button-prev
            .swiper-button-next

            .row__inner.swiper-wrapper
              if user && show.tickets.filter(ticket => ticket.user.id === user.id).length > 0 && show.reviews.filter(review => review.user.id === user.id).length === 0
                each ticket in show.tickets
                  if Date.now() >= ticket.showtime.endDateTime && show.showtimes.filter(showtime => showtime.id === ticket.showtime.id).length > 0 && ticket.user.id === user.id
                    .tile-card.swiper-slide
                      .tile-card__reviewer
                        .tile-card__reviewer-photo
                          - let sourceFile = '/img/users/default.jpg'
                          if user.cloudinaryPhoto.cloudinaryUrl
                            - sourceFile = user.cloudinaryPhoto.cloudinaryUrl
                          img.tile-card__photo-img(src=`${sourceFile}`, alt=`${user.name} Photo`)

                        .tile-card__reviewer-name
                          p.paragraph Create a review!

                      .tile-card__review
                        form#createReviewForm.form(novalidate)
                          .form__group
                            //- input#reviewRating.form__input.input-text(type='number' name='review-rating' placeholder='Rating*' min='1' max='5' required)

                            .stars#starRating(data-rating='1')
                              for i in [1, 2, 3, 4, 5]
                                span.star &nbsp;

                            label.form__label.label-text(for='starRating') Please enter a rating

                          .form__group
                            textarea#review.form__text-area.input-text(name='textarea-review' placeholder='Your Review*' minlength='20' maxlength='280' required)
                            label.form__label.label-text(for='review') Please provide your review

                          .form__group.form__group--tile
                            button#btnCreateReview.btn.btn--blue(type='submit' name='hexadecimal-btn' data-show-id=`${show.id}` data-role-type=`${user.role}`) Create

              each review in show.reviews
                .tile-card.swiper-slide
                  .tile-card__reviewer
                    .tile-card__reviewer-photo
                      - let reviewSourceFile = '/img/users/default.jpg'
                      if review.user.cloudinaryPhoto.cloudinaryUrl
                        - reviewSourceFile = review.user.cloudinaryPhoto.cloudinaryUrl
                      img.tile-card__photo-img(src=`${reviewSourceFile}`, alt=`${review.user.name} Photo`)
                    
                    .tile-card__reviewer-name
                      p.paragraph= review.user.name

                  .tile-card__review
                    //- p.tile__card__review-stars.average-text= review.rating
                    .stars-user(data-rating=`${review.rating}`)
                      for i in [1, 2, 3, 4, 5]
                        span.star(class=i<=review.rating ? 'rated' : 'unrated') &nbsp;

                    .tile-card__review-text-wrapper
                      p.tile-card__review-text.average-text= `"${review.review}"`
              

    section.section-show-additional
      .additional-box
        .additional-box__title.u-margin-top-small.u-margin-bottom-small
          h2.heading-secondary Additional Details

        .additional-box__container.table.paragraph
          .tbody
            .additional-box__organizer.trow
              .additional-box__organizer-title.td Event Organizer:

              - let eventOrganizerSource = '/img/users/default.jpg'
              if show.eventOrganizer[0].cloudinaryPhoto.cloudinaryUrl
                - eventOrganizerSource = show.eventOrganizer[0].cloudinaryPhoto.cloudinaryUrl
              .additional-box__organizer-value.td.
                #[a(class='additional-box__organizer-link', href=`mailto:${show.eventOrganizer[0].email}`) #[img(class='additional-box__organizer-img', src=`${eventOrganizerSource}`, alt=`${show.eventOrganizer[0].name}'s Photo`)] #[span #{show.eventOrganizer[0].name}]]
            
            .additional-box__original-release.trow
              .additional-box__original-release-title.td Original Release:

              .additional-box__original-release-value.td= `${show.originalReleaseDate[0].toLocaleString('en-us', {month: 'long', day: 'numeric', year: 'numeric'})}`

            .additional-box__language.trow
              - const languageVal = (!show.language) ? 'Film' : show.language
              .additional-box__language-title.td Language:

              .additional-box__language-value.td= `${languageVal}`

            .additional-box__subtitles.trow
              - const subtitlesVal = (!show.subtitles) ? 'None' : show.subtitles
              .additional-box__subtitles-title.td Subtitles:

              .additional-box__subtitles-value.td= `${subtitlesVal}`

            .additional-box__content.trow
              - const contentVal = (!show.contentType) ? 'Film' : show.contentType
              .additional-box__content-title.td Content:

              .additional-box__content-value.td= `${contentVal}`

            .additional-box__special-venue.trow
              - const specialVenueVal = (show.specialVenue === true) ? 'Yes' : 'No'
              .additional-box__special-venue-title.td Special Venue:

              .additional-box__special-venue-value.td= `${specialVenueVal}`